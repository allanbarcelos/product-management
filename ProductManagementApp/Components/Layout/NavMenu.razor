@using Microsoft.Extensions.Localization
@using ProductManagementApp.Locales
@inject IStringLocalizer<Resources> L

<div class="top-row navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Product Management</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <Icon Name="IconName.HouseDoorFill" Class="mx-2" /> @L["Home"]
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="products">
                <Icon Name="IconName.Box" Class="mx-2" /> @L["Products"]
            </NavLink>
        </div>

        <div class="nav-item px-3">
            @if (User?.Identity?.IsAuthenticated ?? false)
            {
                <NavLink class="nav-link" href="MicrosoftIdentity/Account/SignOut?post_logout_redirect_uri=/">
                    <Icon Name="IconName.BoxArrowInLeft" Class="mx-2" /> @L["Logout"]
                </NavLink>
            }
            else
            {
                <NavLink class="nav-link" href="MicrosoftIdentity/Account/SignIn">
                    <Icon Name="IconName.BoxArrowInRight" Class="mx-2" /> @L["Login"]
                </NavLink>
            }
        </div>

    </nav>
</div>



@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private ClaimsPrincipal User;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateTask;
        User = authState.User;
    }
}